<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36" version="26.0.12" pages="4">
  <diagram name="Graph" id="M81pX762PwvkrQvY3oK8">
    <mxGraphModel dx="1979" dy="636" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="Xh3V7989MpO9gLk0EHjz-1" value="Graph" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-230" y="80" width="710" height="2390" as="geometry" />
        </mxCell>
        <mxCell id="Xh3V7989MpO9gLk0EHjz-2" value="+ _start: Component&lt;div&gt;+&amp;nbsp;_state_model: ???&lt;/div&gt;&lt;div&gt;+ _end: Component&lt;/div&gt;&lt;div&gt;+ _prepared: Boolean&lt;/div&gt;&lt;div&gt;+ _runs: Int&lt;/div&gt;&lt;div&gt;+ _updates: Int&lt;/div&gt;&lt;div&gt;+ _flow_id: String&lt;/div&gt;&lt;div&gt;+ description: String - ---&lt;/div&gt;&lt;div&gt;+ _user_id:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;String - 用户id信息&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ _is_input_vertices: List[String] - 所有[ChatInput, TextInput, WebhookInput]集合&lt;/div&gt;&lt;div&gt;+&amp;nbsp;_is_output_vertices: List[String] - 所有[ChatOutput, TextOutput, DataOutput]集合&lt;/div&gt;&lt;div&gt;+&amp;nbsp;_is_state_vertices: List[String] - 所有notify, listen Component集合&lt;/div&gt;&lt;div&gt;+&amp;nbsp;has_session_id_vertices: List[String] - 所有带有&#39;session_id&#39;的点集合&lt;/div&gt;&lt;div&gt;+&amp;nbsp;_sorted_vertices_layers: List[list[String]]&lt;/div&gt;&lt;div&gt;+ _run_id:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;String&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ _session_id:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;String&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ _start_time: TimeStamp&lt;/div&gt;&lt;div&gt;+&amp;nbsp;inactivated_vertices: set&lt;/div&gt;&lt;div&gt;+&amp;nbsp;activated_vertices: list[str]&lt;/div&gt;&lt;div&gt;+&amp;nbsp;vertices_layers: list[list[str]] - 拓扑排序后除去第一层的点序列. +`&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;_first_layer`&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;vertices_to_run: set[str] - 所有需要运行的点&lt;/div&gt;&lt;div&gt;+&amp;nbsp;stop_vertex: str&lt;/div&gt;&lt;div&gt;+&amp;nbsp;inactive_vertices: set&amp;nbsp;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;edges: list[CycleEdge] - 点数据结构&lt;/div&gt;&lt;div&gt;+&amp;nbsp;vertices: list[Vertex] - 边数据结构&lt;/div&gt;&lt;div&gt;+&amp;nbsp;run_manager = RunnableVerticesManager()&lt;/div&gt;&lt;div&gt;+&amp;nbsp;state_manager = GraphStateManager()&lt;/div&gt;&lt;div&gt;+&amp;nbsp;_vertices: list[NodeData] - 原始点信息&lt;/div&gt;&lt;div&gt;+&amp;nbsp;_edges: list[EdgeData] - 原始边信息&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;top_level_vertices: list[str] - 第一个图层的顶点信息&lt;/div&gt;&lt;div&gt;+&amp;nbsp;vertex_map: dict[str, Vertex] - 点数据结构的倒排表&lt;/div&gt;&lt;div&gt;+&amp;nbsp;predecessor_map: dict[str, list[str]] - 前序邻接矩阵，target -&amp;gt; source&lt;/div&gt;&lt;div&gt;+&amp;nbsp;successor_map: dict[str, list[str]] - 后继邻接矩阵，source -&amp;gt; target&lt;/div&gt;&lt;div&gt;+&amp;nbsp;in_degree_map: dict[str, int] - 入度表&lt;/div&gt;&lt;div&gt;+&amp;nbsp;parent_child_map: dict[str, list[str]] - 同&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;`successor_map`&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;_run_queue: deque[str]&lt;/div&gt;&lt;div&gt;+&amp;nbsp;_first_layer: list[str] -&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;拓扑排序后第一层的点序列. + `&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;vertices_layers`&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;_lock = asyncio.Lock()&lt;/div&gt;&lt;div&gt;+&amp;nbsp;raw_graph_data: GraphData - 原始图信息&lt;/div&gt;&lt;div&gt;+&amp;nbsp;_graph_data:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;GraphData - 原始图基础上平铺子图信息&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;_is_cyclic: bool&amp;nbsp; - 图中是否有环，即`bool(self.cycle_vertices)`&lt;/div&gt;&lt;div&gt;+&amp;nbsp;_cycle_vertices: set[str] - 环所涉及的点集合&lt;/div&gt;&lt;div&gt;+&amp;nbsp;_call_order: list[str]&lt;/div&gt;&lt;div&gt;+&amp;nbsp;_snapshots: list[dict[str, Any]]&lt;/div&gt;&lt;div&gt;+&amp;nbsp;_end_trace_tasks: set[asyncio.Task]&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;self._context: ???&lt;/div&gt;&lt;div&gt;+&amp;nbsp;self.tracing_service: TracingService&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Xh3V7989MpO9gLk0EHjz-1" vertex="1">
          <mxGeometry y="26" width="710" height="744" as="geometry" />
        </mxCell>
        <mxCell id="Xh3V7989MpO9gLk0EHjz-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="Xh3V7989MpO9gLk0EHjz-1" vertex="1">
          <mxGeometry y="770" width="710" height="8" as="geometry" />
        </mxCell>
        <mxCell id="Xh3V7989MpO9gLk0EHjz-4" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;def from_payload(&lt;/span&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cls,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; payload: dict,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; flow_id: str | None = None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; flow_name: str | None = None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; user_id: str | None = None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ) -&amp;gt; Graph:&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;调用构造函数和`add_nodes_and_edges()`&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;+ def add_nodes_and_edges(self, nodes: list[NodeData], edges: list[EdgeData]) -&amp;gt; None:&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;赋值成员变量_vertices，_edges，raw_graph_data，top_level_vertices，设置run_manager.add_to_cycle_vertices()，后调用initialize()&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;def initialize(self) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;依次调用`_build_graph()`构造所有数据结构，`build_graph_maps(self.edges)`构造关系图，`define_vertices_lists()`构造关键点集合&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ def _build_graph(self) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;调用`_build_vertices()`构造点；紧接着构造点-id的倒排表；调用`_build_edges()`构造边。接下来调用`_build_vertex_params()`构造每个点的参数；`_instantiate_components_in_vertices()`为每个点初始化Component；操作环边？？？&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ def build_graph_maps(self, edges: list[CycleEdge] | None = None, vertices: list[Vertex] | None = None) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;构造赋值成员变量`predecessor_map`, `successor_map`, `in_degree_map`, `parent_child_map`&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;def define_vertices_lists(self) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;赋值成员变量`_is_input_vertices`, `_is_output_vertices`, `has_session_id_vertices`, `_is_state_vertices`&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;async def initialize_run(self) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;调用`tracing_service.initialize_tracers()`来对tracing进行初始化&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;def sort_vertices(&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; stop_component_id: str | None = None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; start_component_id: str | None = None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ) -&amp;gt; list[str]:&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;首先调用`__filter_vertices()`确认本次build图所涉及的点（优先stop，其次start，最后是全部）；接着调用`layered_topological_sort()`获取拓扑序列的点，然后依次调用`sort_by_avg_build_time()`, `sort_chat_inputs_first,&amp;nbsp;sort_layer_by_dependency()`来调整拓扑序列；赋值成员变量`_sorted_vertices_layers`, `vertices_layers`, `vertices_to_run`, `_first_layer`；最后调用`build_run_map()`&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;def build_run_map(self) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;调用`run_manager.build_run_map(predecessor_map=self.predecessor_map, vertices_to_run=self.vertices_to_run)`&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;def layered_topological_sort(&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; vertices: list[Vertex],&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; *,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; filter_graphs: bool = False,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ) -&amp;gt; list[list[str]]:&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;拓扑排序算法，结束后调用`refine_layers()`重新整理压缩&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;def refine_layers(self, initial_layers):&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;重新整理拓扑排序，核心是压缩拓扑层数&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;def build_run_map(self) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;调用`run_manager.build_run_map(predecessor_map=self.predecessor_map, vertices_to_run=self.vertices_to_run)`&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;async def build_vertex(&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; vertex_id: str,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; *,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; get_cache: GetCache | None = None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; set_cache: SetCache | None = None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; inputs_dict: dict[str, str] | None = None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; files: list[str] | None = None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; user_id: str | None = None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fallback_to_env_vars: bool = False,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; event_manager: EventManager | None = None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ) -&amp;gt; VertexBuildResult:&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;如果vertex_id对应的点被froze且有传入get_cache，则从get_cache中获取build的结果；否则调用`vertex.build(user_id=user_id, inputs=inputs_dict, fallback_to_env_vars=fallback_to_env_vars, files=files, event_manager=event_manager)`&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;async def arun(&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; inputs: list[dict[str, str]],&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; *,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; inputs_components: list[list[str]] | None = None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; types: list[InputType | None] | None = None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; outputs: list[str] | None = None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; session_id: str | None = None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; stream: bool = False,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fallback_to_env_vars: bool = False,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ) -&amp;gt; list[RunOutputs]:&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;根据inputs个数，批量调用`&lt;span style=&quot;background-color: transparent;&quot;&gt;_run(&lt;/span&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; inputs=run_inputs,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; input_components=components,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; input_type=input_type,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; outputs=outputs or [],&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; stream=stream,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; session_id=session_id or &quot;&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fallback_to_env_vars=fallback_to_env_vars,&lt;/div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; )&lt;/span&gt;`&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;async def _run(&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; *,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; inputs: dict[str, str],&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; input_components: list[str],&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; input_type: InputType | None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; outputs: list[str],&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; stream: bool,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; session_id: str,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fallback_to_env_vars: bool,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ) -&amp;gt; list[ResultData | None]:&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Xh3V7989MpO9gLk0EHjz-1" vertex="1">
          <mxGeometry y="778" width="710" height="1612" as="geometry" />
        </mxCell>
        <mxCell id="Xh3V7989MpO9gLk0EHjz-85" value="RunnableVerticesManager" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-600" y="80" width="160" height="86" as="geometry" />
        </mxCell>
        <mxCell id="Xh3V7989MpO9gLk0EHjz-86" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Xh3V7989MpO9gLk0EHjz-85" vertex="1">
          <mxGeometry y="26" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Xh3V7989MpO9gLk0EHjz-87" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="Xh3V7989MpO9gLk0EHjz-85" vertex="1">
          <mxGeometry y="52" width="160" height="8" as="geometry" />
        </mxCell>
        <mxCell id="Xh3V7989MpO9gLk0EHjz-88" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Xh3V7989MpO9gLk0EHjz-85" vertex="1">
          <mxGeometry y="60" width="160" height="26" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="oGfEdHqNsz1EckXMNPPQ" name="Vertex">
    <mxGraphModel dx="2422" dy="3219" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="6_XmXa9_-enQfvexfpB0-1" value="Vertex" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="120" y="-1720" width="600" height="2070" as="geometry" />
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-2" value="+ id: String - 点的id信息，id的pattern类似&lt;span style=&quot;color: rgb(4, 81, 165); background-color: rgb(255, 255, 255); font-family: IBMPlexMono, Monaco, &amp;quot;Courier New&amp;quot;, monospace, Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; white-space: pre;&quot;&gt;CosmosAILLM-SM7uk&lt;/span&gt;&lt;div&gt;+ state: VertexStates&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;div&gt;+ _lock: asyncio.Lock()&lt;/div&gt;&lt;div&gt;+ will_stream: bool = False&lt;/div&gt;&lt;div&gt;+ updated_raw_params:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool = False - 是否调用`&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;update_raw_params`更新过`params`, `raw_params`&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ base_name: str - 点的basename，如&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(4, 81, 165); font-family: IBMPlexMono, Monaco, &amp;quot;Courier New&amp;quot;, monospace, Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; white-space: pre;&quot;&gt;CosmosAILLM&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ is_state: bool = False&lt;/div&gt;&lt;div&gt;+ is_input: bool - 这个点是不是[TextInput, ChatInput, WebhookInput]之一 或者&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;`data`的&#39;node.is_input`指定&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ is_output:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool -&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;这个点是不是[TextOutput, ChatOutput, DataOutput]之一&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;或者&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;`data`的&#39;node.is_output`指定&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ has_session_id: Boolean -&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;`data`的&#39;node.template&#39;中是否有&#39;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;session_id&#39;属性&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ custom_component = None&lt;/div&gt;&lt;div&gt;+ has_external_input = False&lt;/div&gt;&lt;div&gt;+ has_external_output = False&lt;/div&gt;&lt;div&gt;+ graph: Graph - 这个点关联的图&lt;/div&gt;&lt;div&gt;+ full_data - 点的原始信息&lt;/div&gt;&lt;div&gt;+ base_type: str | None - 参数指定 或者 ???&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ built_object: Any = UnbuiltObject()&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ built_result: Any = None&lt;/div&gt;&lt;div&gt;+ built = False&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ _successors_ids: list[str] | None = None&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ artifacts: dict[str, Any] = {}&lt;/div&gt;&lt;div&gt;+ artifacts_raw: dict[str, Any] = {}&lt;/div&gt;&lt;div&gt;+ artifacts_type: dict[str, str] = {}&lt;/div&gt;&lt;div&gt;+ steps: list[Callable] = [self._build]&lt;/div&gt;&lt;div&gt;+ steps_ran: list[Callable] = []&lt;/div&gt;&lt;div&gt;+ task_id: str | None = None&lt;/div&gt;&lt;div&gt;+ is_task = is_task&lt;/div&gt;&lt;div&gt;+ params: Dict - 这个点对应的component所需要的参数，形式{field_name: value}，其中value可以是基本类型的value，也可以是Vertex，取决于实际这个field是否连边&lt;/div&gt;&lt;div&gt;+&amp;nbsp;raw_param: - 同`&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;params`&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ parent_node_id: str | None - 父亲节点的id，如果这个点是子图上的点会有？？？&lt;/div&gt;&lt;div&gt;+ load_from_db_fields: list[str] = [] - 需要从db读取的字段 ？？？&lt;/div&gt;&lt;div&gt;+ parent_is_top_level = False&lt;/div&gt;&lt;div&gt;+ layer = None&lt;/div&gt;&lt;div&gt;+ result: ResultData | None = None&lt;/div&gt;&lt;div&gt;+ results: dict[str, Any] = {}&lt;/div&gt;&lt;div&gt;+ outputs_logs: dict[str, OutputValue] = {}&lt;/div&gt;&lt;div&gt;+ logs: dict[str, list[Log]] = {}&lt;/div&gt;&lt;div&gt;+ has_cycle_edges = False&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ is_interface_component: bool =&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;False&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ use_result = False&lt;/div&gt;&lt;div&gt;+ build_times: list[float] = []&lt;/div&gt;&lt;div&gt;+ state = VertexStates.ACTIVE&lt;/div&gt;&lt;div&gt;+ log_transaction_tasks: set[asyncio.Task] = set()&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ data: - `&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;full_data`&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;的&#39;data&#39;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;+ outputs: list[dict] = [] - `data`的&#39;node.output&#39;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;+ output: - `data`的&#39;node.base_classes&#39;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;display_name: -&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;`data`的&#39;node.&lt;/span&gt;display_name&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;description&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: -&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;`data`的&#39;node.&lt;/span&gt;description&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;frozen&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: -&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;`data`的&#39;node.&lt;/span&gt;frozen&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;required_inputs: - ???&lt;/div&gt;&lt;div&gt;+&amp;nbsp;optional_inputs: - ???&lt;/div&gt;&lt;div&gt;+&amp;nbsp;vertex_type: -&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;`data`的&#39;type&#39;, 对于包含Tool属性且&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;`data`的&#39;node._type&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&#39;不全小写，则是&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;`data`的&#39;node._type&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&#39;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6_XmXa9_-enQfvexfpB0-1" vertex="1">
          <mxGeometry y="26" width="600" height="844" as="geometry" />
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="6_XmXa9_-enQfvexfpB0-1" vertex="1">
          <mxGeometry y="870" width="600" height="8" as="geometry" />
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-4" value="&lt;div&gt;+&amp;nbsp;def parse_data(self) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;被构造函数调用，从成员变量`full_data`中解析出其他成员变量：`data,&amp;nbsp;output`, `outputs`, `display_name`, `icon`, `description`, `frozen`, `has_session_id`, `required_inputs`, `optional_inputs`, `vertex_type`, `base_type`.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;+ def build_params(self) -&amp;gt; None:&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;如果updated_raw_params，那么直接返回；否则重新构造params：首先调用`&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;_set_params_from_normal_edge()`来生成依赖参数的vertex；接着对于非连边的属性，使用其value或者default_value；最后赋值给成员变量`params`, `load_from_db_fields`, `raw_params`&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;def _set_params_from_normal_edge(self, params: dict, edge: Edge, template_dict: dict):&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;遍历所有入边，把源点以{field_name: Vertex}的形式加到params里面&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;def instantiate_component(self, user_id=None) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;解析代码，创建Component实例&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;async def build(&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; user_id=None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; inputs: dict[str, Any] | None = None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; files: list[str] | None = None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; requester: Vertex | None = None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; event_manager: EventManager | None = None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; **kwargs,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ) -&amp;gt; Any:&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;如果本节点frozen了并且编译过了，或者提供了requester并且编译过了，那么直接返回。否则调用`_reset()`，如果本节点有&#39;session_id&#39;属性且默认值为空且&#39;inputs&#39;包含了&quot;session&quot;，那么会把这个&quot;session&quot;通过调用`update_raw_params()`赋值给本节点；如果本节点是ChatInput且&#39;inputs&#39;包含了&quot;input_value&quot;，那么会通过调用`update_raw_params()`赋值给本节点。接着依次调用执行成员变量`steps`的函数。调用`finalize_build()`。最后返回本节点的编译结果。&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;async def get_requester_result(self, requester: Vertex | None):&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;返回本节点的编译结果，如果&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;requester不为空且是本节点出边的终点，那么会把本节点的结果赋值给到&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;requester对应的params上&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;def update_raw_params(self, new_params: Mapping[str, str | list[str]], *, overwrite: bool = False) -&amp;gt; None:&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;更新成员变量`&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;raw_params`, `&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;params`，并且置成员变量`&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;updated_raw_params`=True&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;+&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;async def _build(&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fallback_to_env_vars,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; user_id=None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; event_manager: EventManager | None = None,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;首先会调用`_build_each_vertex_in_params_dict()`处理`params`：如果是vertex则获取其结果，list和dict会处理，以及updated_raw_params=True和cornercase会处理一下（在raw_params而不在params的）；接着处理`custom_component`：没有初始化则初始化，接着设置event_manager如果(Custom)Component有&quot;set_event_manager&quot;方法的话；再接着调用`&lt;span style=&quot;background-color: transparent;&quot;&gt;_build_results(&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; custom_component=custom_component,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; custom_params=custom_params,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fallback_to_env_vars=fallback_to_env_vars,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; base_type=self.base_type,&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; )&lt;/span&gt;`获取结果；最后调用`_validate_built_object()`验证结果，以及设置成员变量`built`=True&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;async def _build_each_vertex_in_params_dict(self) -&amp;gt; None:&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;遍历`raw_params`：如果是Vertex则调用`&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;_build_vertex_and_update_params()&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;`更新`params`；如果是list of Vertex，则调用`&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;_build_list_of_vertices_and_update_params()`更新`params`；如果是dict，则调用`&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;_build_dict_and_update_params()&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;更新`params`；如果params没有或者`&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;updated_raw_params&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;`==True，则更新&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;`params`&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;async def _build_results(&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self, custom_component, custom_params, base_type: str, *, fallback_to_env_vars=False&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ) -&amp;gt; None:&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;首先调用`&lt;span style=&quot;background-color: transparent;&quot;&gt;initialize.loading.get_instance_results(&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; custom_component=custom_component,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; custom_params=custom_params,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; vertex=self,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fallback_to_env_vars=fallback_to_env_vars,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; base_type=base_type,&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; )&lt;/span&gt;`执行本节点获取结果；接着调用`build_output_logs()`赋值给`outputs_logs`，最后调用`_update_built_object_and_artifacts()`解析得到最后的结果&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6_XmXa9_-enQfvexfpB0-1" vertex="1">
          <mxGeometry y="878" width="600" height="1192" as="geometry" />
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-5" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.25;entryY=1;entryDx=0;entryDy=0;" parent="1" source="6_XmXa9_-enQfvexfpB0-6" target="6_XmXa9_-enQfvexfpB0-1" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="360" y="340" as="targetPoint" />
            <Array as="points">
              <mxPoint x="230" y="400" />
              <mxPoint x="270" y="400" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-6" value="CustomComponentVertex" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="150" y="470" width="160" height="86" as="geometry" />
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-7" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6_XmXa9_-enQfvexfpB0-6" vertex="1">
          <mxGeometry y="26" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-8" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="6_XmXa9_-enQfvexfpB0-6" vertex="1">
          <mxGeometry y="52" width="160" height="8" as="geometry" />
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-9" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6_XmXa9_-enQfvexfpB0-6" vertex="1">
          <mxGeometry y="60" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-10" value="ComponentVertex" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="390" y="470" width="160" height="86" as="geometry" />
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-11" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6_XmXa9_-enQfvexfpB0-10" vertex="1">
          <mxGeometry y="26" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-12" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="6_XmXa9_-enQfvexfpB0-10" vertex="1">
          <mxGeometry y="52" width="160" height="8" as="geometry" />
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-13" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6_XmXa9_-enQfvexfpB0-10" vertex="1">
          <mxGeometry y="60" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-14" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.521;entryY=0.998;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" source="6_XmXa9_-enQfvexfpB0-10" target="6_XmXa9_-enQfvexfpB0-4" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="470" y="400" />
              <mxPoint x="433" y="400" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-15" value="InterfaceVertex" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-120" y="1000" width="360" height="360" as="geometry" />
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-16" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;added_message = None&lt;/span&gt;&lt;div&gt;+ steps: Dict = [_build, _run]&lt;/div&gt;&lt;div&gt;+ is_interface_component: Boolean = True&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6_XmXa9_-enQfvexfpB0-15" vertex="1">
          <mxGeometry y="26" width="360" height="84" as="geometry" />
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-17" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="6_XmXa9_-enQfvexfpB0-15" vertex="1">
          <mxGeometry y="110" width="360" height="8" as="geometry" />
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-18" value="+ async def _run(self, *args, **kwargs) -&amp;gt; None:&amp;nbsp;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;如果是[ChatInput, ChatOutput]，那么调用`_process_chat_component()`；如果是[DataOutput]，那么调用`_process_data_component()`。如果_build()执行完毕得到的`built_object`是[AsyncIterator, Iterator]，那么改为上一步得到的结果；赋值`built_result` = `built_object`&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;def _process_chat_component(self):&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;???&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6_XmXa9_-enQfvexfpB0-15" vertex="1">
          <mxGeometry y="118" width="360" height="242" as="geometry" />
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-19" value="StateVertex" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="560" y="1000" width="160" height="86" as="geometry" />
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-20" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6_XmXa9_-enQfvexfpB0-19" vertex="1">
          <mxGeometry y="26" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-21" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="6_XmXa9_-enQfvexfpB0-19" vertex="1">
          <mxGeometry y="52" width="160" height="8" as="geometry" />
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-22" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="6_XmXa9_-enQfvexfpB0-19" vertex="1">
          <mxGeometry y="60" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-23" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.384;entryY=1.019;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" source="6_XmXa9_-enQfvexfpB0-15" target="6_XmXa9_-enQfvexfpB0-13" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="6_XmXa9_-enQfvexfpB0-24" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.634;entryY=1.004;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" source="6_XmXa9_-enQfvexfpB0-19" target="6_XmXa9_-enQfvexfpB0-13" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="tB8ECwy9Azwvsp6_eTYf" name="Edge">
    <mxGraphModel dx="3781" dy="1145" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="L-7WQaFRFHUZlMXvsT6y-1" value="Edge" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-150" y="490" width="160" height="86" as="geometry" />
        </mxCell>
        <mxCell id="L-7WQaFRFHUZlMXvsT6y-2" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="L-7WQaFRFHUZlMXvsT6y-1">
          <mxGeometry y="26" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="L-7WQaFRFHUZlMXvsT6y-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="L-7WQaFRFHUZlMXvsT6y-1">
          <mxGeometry y="52" width="160" height="8" as="geometry" />
        </mxCell>
        <mxCell id="L-7WQaFRFHUZlMXvsT6y-4" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="L-7WQaFRFHUZlMXvsT6y-1">
          <mxGeometry y="60" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="L-7WQaFRFHUZlMXvsT6y-5" value="CycleEdge" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-150" y="700" width="160" height="86" as="geometry" />
        </mxCell>
        <mxCell id="L-7WQaFRFHUZlMXvsT6y-6" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="L-7WQaFRFHUZlMXvsT6y-5">
          <mxGeometry y="26" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="L-7WQaFRFHUZlMXvsT6y-7" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="L-7WQaFRFHUZlMXvsT6y-5">
          <mxGeometry y="52" width="160" height="8" as="geometry" />
        </mxCell>
        <mxCell id="L-7WQaFRFHUZlMXvsT6y-8" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="L-7WQaFRFHUZlMXvsT6y-5">
          <mxGeometry y="60" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="L-7WQaFRFHUZlMXvsT6y-9" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.497;entryY=0.975;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="L-7WQaFRFHUZlMXvsT6y-5" target="L-7WQaFRFHUZlMXvsT6y-4">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="qb0ghTu_I0v9LsQH1Ix5" name="Component">
    <mxGraphModel grid="1" page="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="WloRoFcn2hEKxH7440TY-1" value="BaseComponent" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="490" y="110" width="160" height="86" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-2" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="WloRoFcn2hEKxH7440TY-1" vertex="1">
          <mxGeometry y="26" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="WloRoFcn2hEKxH7440TY-1" vertex="1">
          <mxGeometry y="52" width="160" height="8" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-4" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="WloRoFcn2hEKxH7440TY-1" vertex="1">
          <mxGeometry y="60" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-5" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" source="WloRoFcn2hEKxH7440TY-6" target="WloRoFcn2hEKxH7440TY-1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-6" value="CustomComponent" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="490" y="300" width="160" height="86" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-7" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="WloRoFcn2hEKxH7440TY-6" vertex="1">
          <mxGeometry y="26" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-8" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="WloRoFcn2hEKxH7440TY-6" vertex="1">
          <mxGeometry y="52" width="160" height="8" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-9" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="WloRoFcn2hEKxH7440TY-6" vertex="1">
          <mxGeometry y="60" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-10" value="Component" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="470" y="500" width="720" height="710" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-11" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ _inputs: dict[str, InputTypes] = {}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+_outputs_map: dict[str, Output] = {}&lt;/div&gt;&lt;div&gt;+ _results: dict[str, Any] = {}&lt;/div&gt;&lt;div&gt;+ _attributes: dict[str, Any] = {}&lt;/div&gt;&lt;div&gt;+ _parameters = inputs or {}&lt;/div&gt;&lt;div&gt;+ _edges: list[EdgeData] = []&lt;/div&gt;&lt;div&gt;+ _components: list[Component] = []&lt;/div&gt;&lt;div&gt;+ _current_output = &quot;&quot;&lt;/div&gt;&lt;div&gt;+ _event_manager: EventManager | None = None&lt;/div&gt;&lt;div&gt;+ _state_model = None&lt;/div&gt;&lt;div&gt;+ set_attributes(self._parameters)&lt;/div&gt;&lt;div&gt;+ _output_logs = {}&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ __inputs = inputs&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ __config = config&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ trace_type = self._trace_type&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="WloRoFcn2hEKxH7440TY-10" vertex="1">
          <mxGeometry y="26" width="720" height="334" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-12" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="WloRoFcn2hEKxH7440TY-10" vertex="1">
          <mxGeometry y="360" width="720" height="8" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-13" value="+ async def build_results(self):&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;如果_tracing_service不为None，则调用`_tracing_service()`，否则调用`_build_without_tracing()`&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;async def _build_without_tracing(self):&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;调用`_build_results(self)`&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;async def _build_results(self) -&amp;gt; tuple[dict, dict]:&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="WloRoFcn2hEKxH7440TY-10" vertex="1">
          <mxGeometry y="368" width="720" height="342" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-14" value="LCModelComponent" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="160" y="1390" width="160" height="86" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-15" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="WloRoFcn2hEKxH7440TY-14" vertex="1">
          <mxGeometry y="26" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-16" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="WloRoFcn2hEKxH7440TY-14" vertex="1">
          <mxGeometry y="52" width="160" height="8" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-17" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="WloRoFcn2hEKxH7440TY-14" vertex="1">
          <mxGeometry y="60" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-18" value="LCEmbeddingsModel" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="400" y="1390" width="160" height="86" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-19" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="WloRoFcn2hEKxH7440TY-18" vertex="1">
          <mxGeometry y="26" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-20" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="WloRoFcn2hEKxH7440TY-18" vertex="1">
          <mxGeometry y="52" width="160" height="8" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-21" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="WloRoFcn2hEKxH7440TY-18" vertex="1">
          <mxGeometry y="60" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-22" value="LCAgentComponent" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="621" y="1390" width="160" height="86" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-23" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="WloRoFcn2hEKxH7440TY-22" vertex="1">
          <mxGeometry y="26" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-24" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="WloRoFcn2hEKxH7440TY-22" vertex="1">
          <mxGeometry y="52" width="160" height="8" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-25" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="WloRoFcn2hEKxH7440TY-22" vertex="1">
          <mxGeometry y="60" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-26" value="LCVectorStoreComponent" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="850" y="1390" width="160" height="86" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-27" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="WloRoFcn2hEKxH7440TY-26" vertex="1">
          <mxGeometry y="26" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-28" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="WloRoFcn2hEKxH7440TY-26" vertex="1">
          <mxGeometry y="52" width="160" height="8" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-29" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="WloRoFcn2hEKxH7440TY-26" vertex="1">
          <mxGeometry y="60" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-30" value="LCChainComponent" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1080" y="1390" width="160" height="86" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-31" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="WloRoFcn2hEKxH7440TY-30" vertex="1">
          <mxGeometry y="26" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-32" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="WloRoFcn2hEKxH7440TY-30" vertex="1">
          <mxGeometry y="52" width="160" height="8" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-33" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="WloRoFcn2hEKxH7440TY-30" vertex="1">
          <mxGeometry y="60" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-34" value="..." style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1320" y="1390" width="160" height="86" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-35" value="+ field: type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="WloRoFcn2hEKxH7440TY-34" vertex="1">
          <mxGeometry y="26" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-36" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="WloRoFcn2hEKxH7440TY-34" vertex="1">
          <mxGeometry y="52" width="160" height="8" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-37" value="+ method(type): type" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="WloRoFcn2hEKxH7440TY-34" vertex="1">
          <mxGeometry y="60" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-38" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.495;entryY=0.973;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" source="WloRoFcn2hEKxH7440TY-10" target="WloRoFcn2hEKxH7440TY-9" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-39" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.213;entryY=0.973;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" source="WloRoFcn2hEKxH7440TY-14" target="WloRoFcn2hEKxH7440TY-13" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-40" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.299;entryY=1.04;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" source="WloRoFcn2hEKxH7440TY-18" target="WloRoFcn2hEKxH7440TY-13" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-41" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.392;entryY=1.04;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" source="WloRoFcn2hEKxH7440TY-22" target="WloRoFcn2hEKxH7440TY-13" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-42" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.49;entryY=0.973;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" source="WloRoFcn2hEKxH7440TY-26" target="WloRoFcn2hEKxH7440TY-13" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-43" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.62;entryY=1.04;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" source="WloRoFcn2hEKxH7440TY-30" target="WloRoFcn2hEKxH7440TY-13" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="WloRoFcn2hEKxH7440TY-44" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.783;entryY=1.04;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" source="WloRoFcn2hEKxH7440TY-34" target="WloRoFcn2hEKxH7440TY-13" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
